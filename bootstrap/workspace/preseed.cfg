# Minimal bootstrap configuration.
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                
# Intended to install a minimal bootstrap configuration
# that can be further installed by a configuration-management
# system such as Ansible.
#   
# This is actually a bit of a hack; we shouldn't be using this at all,
# but rather having a bootstrap image that natively understands and
# can securly pull-down and execute configuration management instructions
# instead.
#
# However, we currently lack secure repository fetching capabilities, and
# we currently also lack the necessary verbs in Ansible to properly configure
# e.g. MD disk arrays and block-device partitions.
#
# So as a stop-gap, we're reusing debian-installer and partman.

# This debian-installer configuration:
# - Identifies the disks we should be using;
# - Sets up MD mirrors as appropriate;
# - Partitions the disks for the root filesystem.
# - Formats a new root filesystem.
# - Installs a set of authorized keys for the root user.
# - Installs SSH.
# - Installs the pre-requisties for running Ansible playbooks.
# - Configures networking to use DHCP.
#
# This version is suitable for VMs:
# - Partition first block device to contain only one partition.
# - Use that first partition as an LVM PV.
# - Configure one VG, system$hostname)
# - Create one root filesystem as an LV named 'root'.
# - Create one swap partition as an LVM named 'swap'.

# This configuration file will ONLY work if it is passed by URL on
# the kernel command line as "auto url=...", and WILL NOT WORK if
# is passed as "ks=...".

d-i debconf/priority string critical

# Select system locale.
d-i debian-installer/locale string en_GB.UTF-8
d-i console-setup/ask_detect boolean false

# Select system keyboard layout.
d-i keyboard-configuration/xkb-keymap select gb
d-i keyboard-configuration/xkb-keymap seen true

# Is the local clock in UTC? Say 'true' unless you're dual-booting with
# another OS that can't cope with this. (e.g. Windows)
d-i clock-setup/utc boolean true
d-i clock-setup/utc seen true

# System timezone
d-i time/zone string Europe/London
d-i time/zone seen true

# Set system time using NTP.
d-i clock-setup/ntp boolean true
d-i clock-setup/ntp-server string ntp0.csx.cam.ac.uk ntp1.csx.cam.ac.uk ntp2.csx.cam.ac.uk# We have to either set a password for the superuser, or make an
# unprivilged user account.  Don't make a new unprivileged account,
# and set the crypted root password string to 'x', i.e. "none valid".
d-i passwd/make-user boolean true
d-i passwd/root-login boolean true
d-i passwd/root-password-crypted string x

# To create a normal user account.
d-i user-setup/allow-password-weak boolean true
d-i passwd/user-fullname string galicaster
d-i passwd/username string galicaster
## Normal user's password, either in clear text
d-i passwd/user-password password xZvJX37ugcEd6 [crpyt 3]
d-i passwd/user-password-again password xZvJX37ugcEd6 [crpyt 3]
d-i passwd/user-default-groups string sudo

# Specify package mirror to use.
#d-i mirror/protocol string http
#d-i mirror/country string manual
#d-i mirror/http/hostname string www-uxsup.csx.cam.ac.uk
#d-i mirror/http/directory string /pub/linux/ubuntu

# Specify suite to install
d-i mirror/suite string xenial
d-i mirror/udeb/suite string xenial

# Configure disks, GRUB, arrays and filesystems
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# This has to be done using partman-specific configuration pragmas,
# as the kickstart-style parser in Ubuntu is not up to the task.

# Specify a command to run immediately before running partman.
# This sets a VG name to use based on the machine's hostname.
#d-i partman/early_command string \
#    debconf-set partman-auto-lvm/new_vg_name "system"

# Specify disks that are used.
d-i partman-auto/disk string /dev/sda
d-i partman-auto/method string regular
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true
d-i partman-auto/choose_recipe select atomic

# This makes partman automatically partition without confirmation
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true

# Use GPT.
#d-i partman-basicfilesystems/choose_label string gpt
#d-i partman-basicfilesystems/default_label string gpt
#d-i partman-partitioning/choose_label string gpt
#d-i partman-partitioning/default_label string gpt
#d-i partman/choose_label string gpt
#d-i partman/default_label string gpt

partman-auto/text/atomic_scheme ::

1000 10000 1000000 ext3
	$primary{ }
	$bootable{ }
	method{ format }
	format{ }
	use_filesystem{ }
	filesystem{ ext3 }
	mountpoint{ / } .

64 512 300% linux-swap
	method{ swap }
	format{ } .
        .

# Tell the system we want to use this recipe.
#d-i partman-auto/choose_recipe select customlayout

# Work non-interactively.
#d-i partman-auto-lvm/no_boot boolean true
d-i partman-md/device_remove_md boolean true
#d-i partman-md/confirm boolean true
#d-i partman-md/confirm_nooverwrite boolean true
#d-i partman-lvm/device_remove_lvm boolean true
#d-i partman-lvm/confirm boolean true
#d-i partman-lvm/confirm_nooverwrite boolean true
d-i partman/choose_partition select Finish
d-i partman/confirm_write_new_label boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman-partitioning/confirm_write_new_label boolean true

# ... unless an error occurs, in which case be verbose.
#d-i partman-auto-raid/error error
#d-i partman-lvm/vgcreate_nosel error
#d-i partman-lvm/commit_failed error
#d-i partman-auto-lvm/unusable_recipe error

# Install GRUB.
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true
#d-i grub-installer/bootdev string /dev/sda
d-i grub-installer/bootdev  string default


# Network information
d-i netcfg/choose_interface select auto
d-i netcfg/dhcp_timeout string 300
d-i netcfg/get_hostname string dhcp-failed-to-supply-hostname
d-i netcfg/get_domain string error.error.error

# Automatically load (non-free) firmware if required.
d-i hw-detect/load_firmware boolean true
tasksel tasksel/first multiselect minimal

# Install the following packages over and above those required.
d-i pkgsel/ubuntu-standard boolean false
d-i pkgsel/include string openssh-server python vim xserver-xorg-video-intel
d-i preseed/late_command string \
  in-target sh -c 'sed -i "s/^#PermitRootLogin.*\$/PermitRootLogin yes/g" /etc/ssh/sshd_config';

# do a full package upgrade
d-i pkgsel/upgrade select full-upgrade

# Install root SSH keys.
d-i preseed/late_command string \
    echo "Running post-install script."; \
    in-target mkdir -p /root/.ssh; \
    in-target chmod 700 /root/.ssh; \
    echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsCg0AXpLIkPbxr1tzaKKuaFRVRnIhLFQfkq06lQIg5c+iffhsIZOr2OxDaJQfA8RVrfag4XuvaWXHrvOuG6SNw45zZA2eEDOIVsU2imkydqDpq4aa/nhdXrJK8aG7c3JU6jhZ1Hyv5HixAM07RNREeqjNmoK5Ra1uHC3zlzOvpnrWXjSglFa+fQUay426nzTrV/y3ZXVfePJjOGRKIiMeWYkIygH9RJp70XUyfmodHQkuFzg7/IA1s1zFKdF8rcLEsrzFFyMwsQfrB8FbFCEp2qD01K/rTxcwya5pvQn1q9DEOkpHN7daFN7Hf5MAGmBgpficZh54wriUbjEk4cKD ph448@cam.ac.uk' >> /target/root/.ssh/authorized_keys; \
    echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCivwbY9Znw07Ez+TBRUcqmgsJPtPDme2JyzhVGs6dS05SU/rxjAdOGTIdaAn7iL1kybz7/P+oiCFH2Yq97v4ydlM+RrxKANnWxDDPlwDhJ3qc3AWrvdkeUOb3iF4SFeKICryqCpRedCFGMgy3RNpRaApUJY+yMogKLsRRWtAKdEutldeqD9YsC3OjpS55XpaDL7wQdT03sskf+gBASdNduswIOaTZVAb6IIpow4KBlQ0NY7T7ug6OZPZdj1E0lTRWeZgYyLbAhTLHYKcvs8TBANZ1WNz0sFu+2MN8XwZnxLYvzzLPRFBxpCLWgYxa7KD64gGPsOUkpapsqAWm5LSMNmMeCmzNV++GeCryGb4Owu1G48F5dw3z8cCrSvODgSXpZ+YINvoryBJVd4kazw8WQkk++CsVI07H5vHTSwT8WhwgMX74QDexjpAoHIDd9TFAgwBZzIA0ptFzLkx1sQI9FdWNEwwfl37WNoaZlBiVRwdW8q+N6I/7KTxXjBAM0Apc6dC3SD3PJ4EVHM8DbUrpT/qvs36Db+nM39aW1g8aRpkiOy0AC4RzrVLHSstcGRsLGfhqAI4CYtjfuojh4EIIyJl29/1gOiMSUNMI/xOmFD1JT9uNzsdKMjzH7AQjR3G8/CkXiMRpVQipIOWNOzyvPzhVZRaGEkovrhC4W/aQAnQ== si202@cam.ac.uk' >> /target/root/.ssh/authorized_keys; \
    echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC8SL8YZlAsexUOl/4EJUkpNlPdHxopExFQfHPNEpX73/46H+HFi2EUAa2N82H97Vv5ORHff/KJbD+iob2tX6aMzduTqwlvNbtx0GEJl8lmI7dN4T/qz4FsgiSv2kKfGbriPWaxa5vrXNfPk+Jn4xYaT41pE7Q69UCj4rOzEZiewJTnF9prfuGoc24qgGr2XNTwYpJNaovcutgai+PbV+2Y4HhciTQadbfGljg+f963y0Gj40FUwNT77jy9BWrFaXoiAonIII8gE77uoN/CWoniuFSxbfjzF08ILkxBFmgjYyzD2AC4yiHoyXUBt/ccjZmLbcihLw4i0oj7cJWGY3jR amc203@cam.ac.uk' >> /target/root/.ssh/authorized_keys; \
    echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDdC/GtaiXLIaK/Z8Ot9oQWhLaCBd563SYTMlGjZNpRoZao21R+a8NFQtjqBkqd49M7ccAPgzIzDk1npZzhURjKB5O8O+ur1ak51VH01hSgF9txz64bfOdbZpT8426ku3/GvfNFwDkOQA96Ryi5UZ+Jbu3biWYDwmZbUuh4IS6SQ2NyiwwyvVN+2SHkos5tR2mzpQiC/djN86aCmMoNsmqZhH3ln1Wm81AD09VZgsK+2plXIDTKxikRRipDH3YeHP9St7vs5qnR+y6Lz+mt5/EImykj78qo0DgWbIJ2S/1bD7E1ahbi/Zt4RihVwYW8pszLE+/04n0LKqkmgzt5+UMR jenkins@jenkins' >> /target/root/.ssh/authorized_keys; \
    echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDj7nWcms1Bxwz0WXwnvoF8gO8SKoBSEWTw3uxlwLiQe8EbamU/uTPUPKbCi1piEAb/5ZwA3aUpKDY/+0jYSaQKFf13Y1rzER/8DQHohrbaJrCy+fjtV5NcCIim3Irq0bU1dSyEWwe1wiFVTY7fCwHT+037M97ROIT2gmuP+8D/mDFTy1XGGmZ34FZ8jBN2IC3rZVcdxUOiSgnv8qJGBYPB0l/EhUuXjD+FyplzaWf/klc1ZeGs/RgZN3O5g6ZQvC03A7cphW+d04w/eHe9E6lu85NR30wVBr4VKAyqgX1k5A0vBKKX1kR+AwEmSoQkmsjCtzjFToRb2bR/MzkV6Odb mb2174@cam.ac.uk' >> /target/root/.ssh/authorized_keys; \
    echo 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMAnCfoRr7e8Sydww83oehG/SbOqRkxiwETUGieT0mbU jmw11@wadjet' >> /target/root/.ssh/authorized_keys; \
    echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+4XjG6qRfJq76+ICzkJ3UHkD717iKtqAv1S0rO156K3a4sZ7qxNxmHtGSnJXxCwSnYej02jPPN3zvizthHboydpQfM0KkSV9TwTShbTmpN3y8pszcVYRKlvbgGQRDvp1Grw5tQbJZftNdo0I0j9IiH6E8kCagIAlpswyPm98wb47cJxrSX5dmJQgf8Ka/o4r/VSPliW4W+VxkSyxccym636Q4dlv9Lhb5czif5nHSxHXctjzj27TFBL3fJPcI1u7CWEwJSvr2OLdSCkuUQcvDN7Jh8pAggUknrF6hbZ2CbHdnUTAAZcvz7Zs/cgyp43svvWANB0NWmakCf4xsv7Pt rjw57@thor' >> /target/root/.ssh/authorized_keys

# Automatically reboot at the end.
d-i finish-install/reboot_in_progress note
